apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: radm-detector-ingress
  labels:
    app: radm-detector
    component: anomaly-detection
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/rate-limit: "1000"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
    nginx.ingress.kubernetes.io/proxy-body-size: "1m"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "30"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "10"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  tls:
  - hosts:
    - radm.axiomhive.com
    secretName: radm-detector-tls
  rules:
  - host: radm.axiomhive.com
    http:
      paths:
      - path: /api/v1/data/ingest
        pathType: Prefix
        backend:
          service:
            name: radm-detector-service
            port:
              number: 8080
      - path: /healthz
        pathType: Exact
        backend:
          service:
            name: radm-detector-service
            port:
              number: 8080
      - path: /readyz
        pathType: Exact
        backend:
          service:
            name: radm-detector-service
            port:
              number: 8080
      - path: /metrics
        pathType: Exact
        backend:
          service:
            name: radm-detector-service
            port:
              number: 8080
---
apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: letsencrypt-prod
spec:
  acme:
    server: https://acme-v02.api.letsencrypt.org/directory
    email: devops@axiomhive.com
    privateKeySecretRef:
      name: letsencrypt-prod
    solvers:
    - http01:
        ingress:
          class: nginx